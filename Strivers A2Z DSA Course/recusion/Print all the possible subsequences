#include <iostream>
#include<bits/stdc++.h>
using namespace std;

 void printF(int index , vector<int>&ds , int arr[] , int n ){
    if(index == n ){
        for(auto it : ds){
            cout<< it << " " ;
        }
        if(ds.size() == 0){
            cout<< "{}";
        }
        cout<<endl ;
        return ;
    }
    
    //take of pick a particular index into the supsequence
    ds.push_back(arr[index]);
    printF(index+ 1 , ds , arr, n);
    ds.pop_back();
    
    //not pick or not take condition , this element is not add to ur supsequence  
    printF(index+ 1 , ds , arr, n);

}


int main() {
 
  int arr[] = {3 , 1 , 2};
  int n = 3 ;
  vector<int> ds ;
  printF(0 , ds , arr , n);
  return 0;
}

Time Complexity: O(2^n * n)  every Index have Couple Options 
Space Complexity: O(1)  max number of recursion is 3 in stack space


3 1 2 
3 1 
3 2 
3 
1 2 
1 
2 
{}
