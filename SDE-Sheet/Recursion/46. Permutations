class Solution {

private: 

 void recurPremute(vector<int>&ds,vector<vector<int>>&answer,vector<int>&freq, vector<int>nums)
 {
     if(ds.size() == nums.size())
     {
         answer.push_back(ds);
         return; 
     }
     for(int i = 0 ; i < nums.size() ; i++)
     {
         if(!freq[i]) // not marked as visited
         {
             ds.push_back(nums[i]);
             freq[i] = 1 ;
             recurPremute(ds ,answer , freq , nums);
             freq[i] = 0 ;
             ds.pop_back();
         }
     }
 }

public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> answer ; 
        vector<int> ds ;
        // int freq[nums.size()] = {0};
         vector<int> freq(nums.size(), 0);
        recurPremute(ds , answer , freq , nums);
        return answer ;
    }
};
