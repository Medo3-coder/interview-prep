
//memomziation  solo-------------------------------------

#include <bits/stdc++.h> 
int solve(int index , vector<int> &heights , vector<int> &dp){
    
    if(index == 0 ) return 0 ; 
    if(dp[index] != -1)  return dp[index] ;

    int left = solve(index - 1 , heights , dp) + abs(heights[index] - heights[index - 1]) ;
    int right = INT_MAX;

    if(index > 1)
    {
         right = solve(index - 2 , heights , dp) + abs(heights[index] - heights[index - 2]);
    }
        return dp[index] = min(right , left);
}
int frogJump(int n, vector<int> &heights)
{
     vector<int>dp(n + 1 , -1);
     return  solve(n - 1 , heights , dp);
}


//--------------- tabulation ------------


int frogJump(int n, vector<int> &heights)
{
     vector<int>dp(n , 0);
     dp[0] = 0 ;
     for(int i = 1 ; i < n ; i++)
     {
         int first_step  = dp[i - 1] + abs(heights[i] - heights[i - 1]) ;
         int double_step = INT_MAX ; 
         if(i > 1)
         {
             double_step = dp[i - 2] + abs(heights[i] - heights[i - 2]) ;
         }
             dp[i] = min(first_step , double_step);
        
     }
     return dp[n -1] ;

}
